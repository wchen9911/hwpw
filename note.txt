Test:

>mongod.exe --dbpath "c:\data"

//Team Data
db.performers.insert({ name : '老鹰', group: 'NBA', ename: 'Hawks', type: 1, city : '亚特兰大', logo: 'nbalogos/ATL_logo.svg'});
db.performers.insert({ name : '黄蜂', group: 'NBA', ename: 'Hornets', type: 1, city : '夏洛特', logo: 'nbalogos/CHA.svg'});
db.performers.insert({ name : '热火', group: 'NBA', ename: 'Heat', type: 1, city : '迈阿密', logo: 'nbalogos/MIA.svg'});
db.performers.insert({ name : '魔术', group: 'NBA', ename: 'Magic', type: 1, city : '奥兰多', logo: 'nbalogos/ORL.svg'});
db.performers.insert({ name : '奇才', group: 'NBA', ename: 'Wizards', type: 1, city : '华盛顿', logo: 'nbalogos/WAS.svg'});
db.performers.insert({ name : '公牛', group: 'NBA', ename: 'Bulls', type: 1, city : '芝加哥', logo: 'nbalogos/CHI.svg'});
db.performers.insert({ name : '骑士', group: 'NBA', ename: 'Cavaliers', type: 1, city : '克利夫兰', logo: 'nbalogos/cavaliers_Clogo.svg'});
db.performers.insert({ name : '活塞', group: 'NBA', ename: 'Pistons', type: 1, city : '底特律', logo: 'nbalogos/DET.svg'});
db.performers.insert({ name : '步行者', group: 'NBA', ename: 'Pacers', type: 1, city : '印第安纳', logo: 'nbalogos/IND.svg'});
db.performers.insert({ name : '雄鹿', group: 'NBA', ename: 'Bucks', type: 1, city : '密尔沃基', logo: 'nbalogos/MIL.svg'});
db.performers.insert({ name : '凯尔特人', group: 'NBA', ename: 'Celtics', type: 1, city : '波士顿', logo: 'nbalogos/BOS.svg'});
db.performers.insert({ name : '篮网', group: 'NBA', ename: 'Nets', type: 1, city : '布鲁克林', logo: 'nbalogos/BKN.svg'});
db.performers.insert({ name : '尼克斯', group: 'NBA', ename: 'Knicks', type: 1, city : '纽约', logo: 'nbalogos/NYK.svg'});
db.performers.insert({ name : '76人', group: 'NBA', ename: '76ers', type: 1, city : '费城', logo: 'nbalogos/PHI_logo.svg'});
db.performers.insert({ name : '猛龙', group: 'NBA', ename: 'Raptors', type: 1, city : '多伦多', logo: 'nbalogos/TOR.svg'});
db.performers.insert({ name : '勇士', group: 'NBA', ename: 'Warriors', type: 1, city : '金州', logo: 'nbalogos/GSW.svg'});
db.performers.insert({ name : '快船', group: 'NBA', ename: 'Clippers', type: 1, city : '洛杉矶', logo: 'nbalogos/LAC.svg'});
db.performers.insert({ name : '湖人', group: 'NBA', ename: 'Lakers', type: 1, city : '洛杉矶', logo: 'nbalogos/LAL.svg'});
db.performers.insert({ name : '太阳', group: 'NBA', ename: 'Suns', type: 1, city : '菲尼克斯', logo: 'nbalogos/PHX_logo.svg'});
db.performers.insert({ name : '国王', group: 'NBA', ename: 'Kings', type: 1, city : '萨克拉门托', logo: 'nbalogos/SAC.svg'});
db.performers.insert({ name : '掘金', group: 'NBA', ename: 'Nuggets', type: 1, city : '丹佛', logo: 'nbalogos/DEN.svg'});
db.performers.insert({ name : '森林狼', group: 'NBA', ename: 'Timberwolves', type: 1, city : '明尼苏达', logo: 'nbalogos/MIN.svg'});
db.performers.insert({ name : '雷霆', group: 'NBA', ename: 'Thunder', type: 1, city : '奥克拉荷马城', logo: 'nbalogos/OKC.svg'});
db.performers.insert({ name : '开拓者', group: 'NBA', ename: 'Trail Blazers', type: 1, city : '波特兰', logo: 'nbalogos/POR.svg'});
db.performers.insert({ name : '爵士', group: 'NBA', ename: 'Jazz', type: 1, city : '犹他', logo: 'nbalogos/UTA.svg'});
db.performers.insert({ name : '小牛', group: 'NBA', ename: 'Mavericks', type: 1, city : '达拉斯', logo: 'nbalogos/DAL.svg'});
db.performers.insert({ name : '火箭', group: 'NBA', ename: 'Rockets', type: 1, city : '休斯顿', logo: 'nbalogos/HOU.svg'});
db.performers.insert({ name : '灰熊', group: 'NBA', ename: 'Grizzlies', type: 1, city : '孟菲斯', logo: 'nbalogos/MEM.svg'});
db.performers.insert({ name : '鹈鹕', group: 'NBA', ename: 'Pelicans', type: 1, city : '新奥尔良', logo: 'nbalogos/NOP.svg'});
db.performers.insert({ name : '马刺', group: 'NBA', ename: 'Spurs', type: 1, city : '圣安东尼奥', logo: 'nbalogos/Spur_tkts.svg'});


//query
db.getCollection('alcatrazTicket').find({ }).sort( { date: 1 } )


//
//type : 1, final price
//type : 2, discount
//group : for ticket
db.promotion.insert({ name: '恶魔岛票(白天)(成人)', type: 1, group: 1, price : 258});
db.promotion.insert({ name: '恶魔岛票(白天)(青年)', type: 1, group: 1, price : 258});
db.promotion.insert({ name: '恶魔岛票(白天)(儿童)', type: 1, group: 1, price : 160});
db.promotion.insert({ name: '恶魔岛票(白天)(老年)', type: 1, group: 1, price : 246});
db.promotion.insert({ name: '恶魔岛票(白天)(幼儿)', type: 1, group: 1, price : 0});

db.promotion.insert({ name: '恶魔岛票(晚间)(成人)', type: 1, group: 2, price : 312});
db.promotion.insert({ name: '恶魔岛票(晚间)(青年)', type: 1, group: 2, price : 312});
db.promotion.insert({ name: '恶魔岛票(晚间)(儿童)', type: 1, group: 2, price : 188});
db.promotion.insert({ name: '恶魔岛票(晚间)(老年)', type: 1, group: 2, price : 290});
db.promotion.insert({ name: '恶魔岛票(晚间)(幼儿)', type: 1, group: 2, price : 0});


db.promotion.insert({ name: '恶魔岛与天使岛套票(成人)', type: 1, group: 3, price : 522});
db.promotion.insert({ name: '恶魔岛与天使岛套票(青年)', type: 1, group: 3, price : 522});
db.promotion.insert({ name: '恶魔岛与天使岛套票(儿童)', type: 1, group: 3, price : 353});
db.promotion.insert({ name: '恶魔岛与天使岛套票(老年)', type: 1, group: 3, price : 510});
db.promotion.insert({ name: '恶魔岛与天使岛套票(幼儿)', type: 1, group: 3, price : 0});



API URL

Consumer Key	ucde4TspTbX8MvznsGBUCrjf7kiay8I6
 
"use strict";
var page = require('webpage').create();
console.log('The default user agent is ' + page.settings.userAgent);
page.settings.userAgent = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.137 Safari/4E423F';
page.settings.javascriptEnabled = true;
page.settings.localToRemoteUrlAccessEnabled = true;
page.settings.XSSAuditingEnabled = true;

var url = "http://www.alcatraztickets.com/";

url = "http://www.alcatrazcruises.com/";
page.open( url , function (status) {
    if (status !== 'success') {
        console.log('Unable to access network');
    } else {
        var ua = page.evaluate(function () {
            return document.getElementById('myagent').innerText;
        });
        console.log(ua);

        console.log(page.content);
    }
    phantom.exit();
});


Mongoose automatically looks for the plural version of your model name.


db.performers.insert({name: "GS", type: 1, _id: ObjectId('57b3c9d481d7b1b5cb4b24c9')} );
db.performers.insert({name: "LA", type: 1, _id: ObjectId('57ba06f107f2889466f7a086')} );
db.performers.insert({name: "CA", type: 2, _id: ObjectId('57ba071307f2889466f7a087')} );

db.performers.insert({ name : '勇士', group: 'NBA', ename: 'Warriors', type: 1, city : '金州', logo: 'nbalogos/GSW.svg', _id: ObjectId('57b3c9d481d7b1b5cb4b24c9')});
db.performers.insert({ name : '湖人', group: 'NBA', ename: 'Lakers', type: 1, city : '洛杉矶', logo: 'nbalogos/LAL.svg', _id: ObjectId('57ba06f107f2889466f7a086')});
db.performers.insert({ name : '马刺', group: 'NBA', ename: 'Spurs', type: 1, city : '圣安东尼奥', logo: 'nbalogos/Spur_tkts.svg', _id: ObjectId('57ba071307f2889466f7a087')});


db.locations.insert({name: 'Oracle Arena', city: 'Oakland', state:'CA', _id: ObjectId('57ba081107f2889466f7a088'), map_img: 'assets/map/warriors.jpg', map_json: 'assets/map/warriors.json'});
db.locations.insert({name: 'T-Mobile Arena', city: 'Las Vegas', state:'NV', _id: ObjectId('57ba081207f2889466f7a089'), map_img: 'assets/map/warriors.jpg', map_json: 'assets/map/warriors.json'});

db.performances.insert({name: 'LA at GS Preseason', location: '57ba081107f2889466f7a088', performer: ['57b3c9d481d7b1b5cb4b24c9', '57ba06f107f2889466f7a086'], date: '2016-10-01 19:00', _id: ObjectId('57ba090407f2889466f7a08a')});
db.performances.insert({name: 'CA at GS Preseason', location: '57ba081207f2889466f7a089', performer: ['57b3c9d481d7b1b5cb4b24c9', '57ba071307f2889466f7a087'], date: '2016-10-02 19:00', _id: ObjectId('57ba090607f2889466f7a08b')});

db.tickets.insert({name:"11", performance:'57ba090407f2889466f7a08a', price: 500, type: 1, level: "Upper", section: "A", row: "12", seat: [1,2,3,4], pack: [1,2]});
db.tickets.insert({name:"22", performance:'57ba090407f2889466f7a08a', price: 200, type: 1, level: "Upper", section: "A", row: "12", seat: [2,3,4], pack: [1]});
 
db.locations.update({id: 'Oracle Arena'},{map_img: 'assets/map/warriors.jpg', map_json: 'assets/map/warriors.jpg'})
